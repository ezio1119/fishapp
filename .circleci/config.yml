version: 2.1
orbs:
  gcloud: circleci/gcp-cli@1.8.3
  k8s: circleci/kubernetes@0.9.1

jobs:
  update-manifest:
    machine: true
    steps:
      - checkout
      - gcloud/install
      - gcloud/initialize
      - k8s/install-kubectl
      - run:
          name: create-secret
          command: |
            cat \<<EOF > k8s/kustomization.yaml
            apiVersion: kustomize.config.k8s.io/v1beta1
            kind: Kustomization
            secretGenerator:
            - name: fishapp-secret
              literals:
              - jwtkey=${JWT_KEY}
            EOF
      - run:
          name: update-manifest
          command: |
            gcloud container clusters get-credentials fishapp
            nuxt_tag=$(gcloud container images list-tags asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_client_nuxt --limit=1 --format="value(TAGS)")
            client_nginx_tag=$(gcloud container images list-tags asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_client_nginx --limit=1 --format="value(TAGS)")
            auth_tag=$(gcloud container images list-tags asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_auth --limit=1 --format="value(TAGS)")
            auth_nginx_tag=$(gcloud container images list-tags asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_auth_nginx --limit=1 --format="value(TAGS)")

            cat \<<EOF >> k8s/kustomization.yaml
            images:
              - name: fishapp_client_nuxt
                newTag: $nuxt_tag
                newName: asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_client_nuxt
              - name: fishapp_client_nginx
                newTag: $client_nginx_tag
                newName: asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_client_nginx
              - name: fishapp_auth
                newTag: $auth_tag
                newName: asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_auth
              - name: fishapp_auth_nginx
                newTag: $auth_nginx_tag
                newName: asia.gcr.io/${GOOGLE_PROJECT_ID}/fishapp_auth_nginx
            resources:
            - auth.yml
            - auth-db.yml
            - client.yml
            - configmap.yml
            - ingress.yml
            - ssd-storageclass.yml
            EOF
            kubectl apply -k k8s/

workflows:
  update-manifest:
    jobs:
      - update-manifest